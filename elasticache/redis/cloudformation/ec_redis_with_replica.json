{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a VPC containing subnets with Redis 3 replicas",
    "Parameters": {
        "RedisNodeType": {
            "Description": "elasticache Redis Node Instance Type",
            "Type": "String",
            "Default": "cache.t2.micro",
            "AllowedValues": [
                "cache.t2.micro"
            ],
            "ConstraintDescription": "the least costly machine that can use "
        }
    },
    "Mappings": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/24"
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "PublicInternetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicInternetRouteTable"
                }
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicInternetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet0": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.0.0/25",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.0.128/25",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet0RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicInternetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet0"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicInternetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "RedisParameterGroup": {
            "Type": "AWS::ElastiCache::ParameterGroup",
            "Properties": {
                "CacheParameterGroupFamily": "redis3.2",
                "Description": "RedisParameterGroup"
            }
        },
        "RedisSubnetGroup": {
            "Type": "AWS::ElastiCache::SubnetGroup",
            "Properties": {
                "Description": "RedisSubnetGroup",
                "SubnetIds": [
                    {
                        "Ref": "PublicSubnet0"
                    },
                    {
                        "Ref": "PublicSubnet1"
                    }
                ]
            }
        },
        "RedisSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "RedisSecurityGroup",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 6379,
                        "ToPort": 6379
                    }
                ]
            }
        },
        "RedisReplicationGroup": {
            "Type": "AWS::ElastiCache::ReplicationGroup",
            "Properties": {
                "AutomaticFailoverEnabled": true,
                "CacheNodeType": {
                    "Ref": "RedisNodeType"
                },
                "CacheParameterGroupName": {
                    "Ref": "RedisParameterGroup"
                },
                "CacheSubnetGroupName": {
                    "Ref": "RedisSubnetGroup"
                },
                "Engine": "redis",
                "EngineVersion": "3.2.10",
                "NumCacheClusters": 3,
                "ReplicationGroupDescription": "RedisReplicationGroup",
                "SecurityGroupIds": [
                    {
                        "Ref": "RedisSecurityGroup"
                    }
                ]
            }
        }
    },
    "Outputs": {}
}
